import { Component, OnInit } from '@angular/core';
import { KeysService } from '../keys.service';
import { DeviceDLMSKey } from '../shared/device-key-dlms.model';
import { DeviceService } from '../../devices/device.service';
import { ActivatedRoute } from '@angular/router';
import { KeyContent } from '../shared/key-content.model';
import { PagerService } from 'src/app/core/pager/pager.service';
import { DLMSAssociation } from '../shared/dlms-asssociation.model';
import { HttpParams } from '@angular/common/http';

@Component({
  selector: 'app-keys-list',
  templateUrl: './keys-list.component.html',
  styleUrls: ['./keys-list.component.css']
})
export class KeysListComponent implements OnInit {
  deviceDLMSKeys: DeviceDLMSKey[];
  keycontents: KeyContent[];
  dlmsAssociations: DLMSAssociation[];
  dlmsAssociationId: number;
  test: number;
  pager: any = {};
  pagedItems: KeyContent[];
  dlmsAssociation: DLMSAssociation;

  constructor(private keysService: KeysService, private activatedRoute: ActivatedRoute, private pagerService: PagerService) { }

  ngOnInit() {
    this.dlmsAssociationId = Number(this.activatedRoute.snapshot.params['id']);
    this.onGetDLMSAssociations();
  }

  onGetDLMSAssociations(refresh = false) {
    let params = new HttpParams();
    params = params.append('dlmsAssociationId', String(this.dlmsAssociationId));
    this.keysService.getDlmsAssociations(true, params).subscribe((dlmsAssociations) => {
      this.dlmsAssociation = dlmsAssociations.dlmsAssociations[0];
    },
      (err) => (console.log(err)),
      () => this.onGetKeys());
  }

  onGetKeys() {
    this.keysService.getKeys().subscribe((keys) => {
      this.deviceDLMSKeys = keys.deviceDLMSKeys;
      this.getSpecificKeys();
      this.setPage(1);
    });
    console.log(this.deviceDLMSKeys);
  }

  getSpecificKeys() {
    this.keycontents = new Array();

    for (let i = 0; i < this.deviceDLMSKeys.length; i++) {
      for (let b = 0; b < this.deviceDLMSKeys[i].keyContents.length; b++) {
        if (Number(this.deviceDLMSKeys[i].keyContents[b].dlmsAssociationId) === this.dlmsAssociationId) {
          this.deviceDLMSKeys[i].keyContents[b].plantNumber = this.deviceDLMSKeys[i].plantNumber;
          this.keycontents.push(this.deviceDLMSKeys[i].keyContents[b]);
        }
      }
    }
  }

  setPage(page: number) {
    // get pager object from service
    this.pager = this.pagerService.getPager(this.keycontents.length, page);

    // get current page of items
    this.pagedItems = this.keycontents.slice(this.pager.startIndex, this.pager.endIndex + 1);
  }
}
