import { Component, OnInit } from '@angular/core';
import { Event as NavigationEvent } from "@angular/router";
import { filter } from "rxjs/operators";
import { NavigationStart } from "@angular/router";
import { Router } from "@angular/router";
import { PublishDetailsService } from './services/publish-details.service';
import { Envelop, ICrossComponentMsg, NavIdentification } from './common/cross-component-msg';


@Component({
  selector: 'app-root',
  templateUrl: './app.component.html',
  styleUrls: ['./app.component.css']
})
export class AppComponent implements ICrossComponentMsg, OnInit {

	envelop: Envelop;
	constructor(router: Router,
		private emitDetails: PublishDetailsService) {
		this.setEnvelop(null);
		router.events
			.pipe(
				filter(
					( event: NavigationEvent ) => {
 
						return( event instanceof NavigationStart );
 
					}
				)
			)
			.subscribe(
				(event: NavigationStart) => {

					if (event.navigationTrigger == "popstate") {

						let navId = new NavIdentification();						
						navId.Name =  event.url;
						let index = navId.Name .lastIndexOf("/")+1;
						navId.Name = navId.Name.substring(index);
						navId.Url = event.url;
						this.envelop.set(navId);
						this.emitDetails.messageEmitter.next(this.envelop);

					}

				}
			)
		;
 
	}
	setEnvelop(data) {
		this.envelop = new Envelop('DeviceSetupComponent',
			'AppComponent', 'Send selected router path to DeviceSetupComponent', data);
	}
	ngOnInit() {
		this.setEnvelop(null);
	}
	onSubscribedData(data:any)
	{		
	}
}
