<form [formGroup]="createFormGroup" autocomplete="off">
  <div class="container-fluid text-left">
    <div class="tab-content" id="tabContent">

      <!-- Device Info -->
      <div class="tab-pane fade" [ngClass]="showAndActivateTab('deviceInfo')" id="deviceInfo">
        <h6> Device Information</h6>
        <div *ngIf='deviceCreateFields != null'>
          <div formArrayName="deviceInfo"
            *ngFor="let deviceInfo of deviceCreateFields | keyvalue : KeepOrder; let i = index">
            <div class="row m-1" *ngIf="deviceInfo.value.FieldType==='Text'">
              <label class="col-sm-4"
                [ngClass]="showRequiredIndicator(deviceInfo.value.Required)">{{deviceInfo.value.Description}}</label>
              <div class="col-sm-8">
                <input maxlength="{{deviceInfo.value.MaxLength}}" [formControlName]="i"
                  type={{deviceInfo.value.FieldType}} class="form-control form-control-sm"
                  (keypress)="omit_invalid_characters($event,deviceCreateFields, i)">
                  <!--Error Messages-->
                <div class="input-group input-group-sm"
                  *ngIf="createFormGroup.controls['deviceInfo'].controls[i].invalid && !createFormGroup.controls['deviceInfo'].controls[i].pristine">
                  <small class="small-error" [innerHTML]="getErrorMessage(createFormGroup.controls['deviceInfo'].controls[i].value,deviceCreateFields, i)"></small>
                </div>
              </div>
            </div>
            <div class="row m-1" *ngIf="deviceInfo.value.FieldType==='DropDown'">
              <label class="col-sm-4"
                [ngClass]="showRequiredIndicator(deviceInfo.value.Required)">{{deviceInfo.value.Description}}</label>
              <div class="col-sm-8">
                <select [formControlName]="i" class="form-control form-control-sm">
                  <option *ngFor="let dropDownInfo of deviceInfo.value.OptionValues | keyvalue : KeepOrder"
                    ngValue="{{dropDownInfo.value}}">
                    {{dropDownInfo.key}}</option>
                </select>
              </div>
            </div>
          </div>
        </div>
      </div>

      <!-- Device Comms -->
      <div class="tab-pane fade" [ngClass]="showAndActivateTab('deviceComms')" id="profile"
        aria-labelledby="profile-tab">
        <h6> Device Communication</h6>
        <div *ngIf='deviceCreateCommFields != null' formArrayName="deviceComms">
          <div *ngFor="let deviceInfo of deviceCreateCommFields | keyvalue : KeepOrder; let i = index">
            <div class="row m-1" *ngIf="deviceInfo.value.FieldType==='Text' || deviceInfo.value.FieldType==='Number'">
              <label class="col-sm-6"
                [ngClass]="showRequiredIndicator(deviceInfo.value.Required)">{{deviceInfo.value.Description}}</label>
              <div class="col-sm-6 no-gutters">
                <input maxlength="{{deviceInfo.value.MaxLength}}" [formControlName]="i"
                  type={{deviceInfo.value.FieldType}} class="form-control form-control-sm"
                  min={{deviceInfo.value.MinLength}} max="{{deviceInfo.value.MaxLength}}"
                  (keypress)="omit_invalid_characters($event,deviceCreateCommFields, i)"
                  autocomplete="off">
                  <!--Error Messages-->
                <div class="input-group input-group-sm"
                  *ngIf="createFormGroup.controls['deviceComms'].controls[i].invalid && !createFormGroup.controls['deviceComms'].controls[i].pristine">
                  <small class="small-error" [innerHTML]="getErrorMessage(createFormGroup.controls['deviceComms'].controls[i].value,deviceCreateCommFields, i)"></small>
                </div>
              </div>
            </div>
            <div class="row m-1" *ngIf="deviceInfo.value.FieldType==='IPAddress'">
              <label class="col-sm-6"
                [ngClass]="showRequiredIndicator(deviceInfo.value.Required)">{{deviceInfo.value.Description}}</label>
              <div class="col-sm-6">
                <input [formControlName]="i" type="text"
                  class="form-control form-control-sm">
                  <!--Error Messages-->
                <div class="input-group input-group-sm"
                  *ngIf="createFormGroup.controls['deviceComms'].controls[i].invalid && !createFormGroup.controls['deviceComms'].controls[i].pristine">
                  <small class="small-error" [innerHTML]="getErrorMessage(createFormGroup.controls['deviceComms'].controls[i].value,deviceCreateCommFields, i)"></small>
                </div>              
              </div>
            </div>
            <div class="row m-1" *ngIf="deviceInfo.value.FieldType==='DropDown'">
              <label class="col-sm-6"
                [ngClass]="showRequiredIndicator(deviceInfo.value.Required)">{{deviceInfo.value.Description}}</label>
              <div class="col-sm-6">
                <select [formControlName]="i" class="form-control form-control-sm">
                  <option *ngFor="let dropDownInfo of deviceInfo.value.OptionValues | keyvalue : KeepOrder"
                    [ngValue]="dropDownInfo.value">
                    {{dropDownInfo.key}}</option>
                </select>
              </div>
            </div>
          </div>
        </div>
      </div>

      <!-- Device Security -->
      <div class="tab-pane fade" [ngClass]="showAndActivateTab('deviceSecurity')" id="profile"
        aria-labelledby="profile-tab">
        <h6> Device Security and DLMS Settings</h6>
        <div *ngIf='deviceCreateSecurityFields != null' formArrayName="deviceSecurity">
          <div *ngFor="let deviceInfo of deviceCreateSecurityFields | keyvalue : KeepOrder; let i = index">
            <div class="row m-1"
              *ngIf="deviceInfo.value.FieldType==='Text' || deviceInfo.value.FieldType==='Password' || deviceInfo.value.FieldType === 'Number'">
              <label class="col-sm-6"
                [ngClass]="showRequiredIndicator(deviceInfo.value.Required)">{{deviceInfo.value.Description}}</label>
              <div class="col-sm-6">
                <input maxlength="{{deviceInfo.value.MaxLength}}" [formControlName]="i"
                  type={{deviceInfo.value.FieldType}} class="form-control form-control-sm"
                  min={{deviceInfo.value.MinLength}} max={{deviceInfo.value.MaxLength}}
                  (keypress)="omit_invalid_characters($event, deviceCreateSecurityFields, i)" autocomplete="new-password">
                  <!--Error Messages-->
                <div class="input-group input-group-sm"
                  *ngIf="createFormGroup.controls['deviceSecurity'].controls[i].invalid && !createFormGroup.controls['deviceSecurity'].controls[i].pristine">
                  <small class="small-error" [innerHTML]="getErrorMessage(createFormGroup.controls['deviceSecurity'].controls[i].value,deviceCreateSecurityFields, i)"></small>
                </div>
              </div>
            </div>
            <div class="row m-1" *ngIf="deviceInfo.value.FieldType==='DropDown'">
              <label class="col-sm-6"
                [ngClass]="showRequiredIndicator(deviceInfo.value.Required)">{{deviceInfo.value.Description}}</label>
              <div class="col-sm-6">
                <select [formControlName]="i" class="form-control form-control-sm">
                  <option *ngFor="let dropDownInfo of deviceInfo.value.OptionValues | keyvalue : KeepOrder"
                    ngValue="{{dropDownInfo.value}}">
                    {{dropDownInfo.key}}</option>
                </select>
              </div>
            </div>
          </div>
        </div>
      </div>

      <!-- Device Create Summary -->
      <div class="tab-pane fade" [ngClass]="showAndActivateTab('summary')" id="profile" aria-labelledby="profile-tab">
        <div class="row no-gutters">
          <div class="col-5"><img src='./assets/images/meters/generic_meter.png' width="138" height="190"
              alt="meter image">
          </div>
          <div class="col-7 mt-2">
            <div *ngFor="let deviceInfo of getCreateSummary() | keyvalue : KeepOrder; let i = index">
              <div class="row">
                <small class="col-5">{{deviceInfo.key}} </small>
                <small
                  class="col-7"><b>{{deviceInfo.value}}</b></small>
              </div>
            </div>
            <br>
            <small> Click <b>Submit</b> to create the device</small>
          </div>
        </div>
      </div>
    </div>
  </div>
  <hr>
  <!--hidden button to close the modal on submit and cancel-->
  <button #closeModal type="button" (click)="resetForm();" class="close" data-dismiss="modal" aria-label="Close">
  </button>

  <div class="float-right" *ngIf="!cancelDeviceCreate">
    <button type="button" class="btn btn-primary m-1 btn-sm" (click)="onPrevious()" [disabled]=isFirstPage()>&#10901;
      Previous</button>
    <button type="button" class="btn btn-primary m-1 btn-sm" (click)="onNext()" [disabled]=!isTabValid()
      *ngIf="activeTab != 'summary'">Next &#10902;</button>
    <button type="button" class="btn btn-primary m-1 btn-sm" (click)="onNext()" *ngIf="activeTab === 'summary'">Submit
      &#10902;</button>
    <button type="button" class="btn btn-primary m-1 btn-sm" (click)="clickCancel();">Cancel</button>
  </div>

  <div class="float-right" *ngIf="cancelDeviceCreate">
    <b class="m-1">Are you sure you want to cancel create device?</b>
    <button type="button" class="btn btn-danger m-1 btn-sm" data-dismiss="modal" (click)="resetForm();"> Yes </button>
    <button type="button" class="btn btn-outline-primary m-1 btn-sm" (click)="clickCancel();"> No </button>  
  </div>
</form>
