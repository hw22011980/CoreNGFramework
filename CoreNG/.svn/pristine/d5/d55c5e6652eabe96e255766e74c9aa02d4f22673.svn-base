import { Injectable } from '@angular/core';
import { tap } from 'rxjs/operators';
import { CoreService } from '../core/core.service';
import { AuthService } from '../auth/auth.service';
import { HttpClient, HttpParams, HttpHeaders } from '@angular/common/http';
import { Schedules } from './shared/schedules.model';

@Injectable({
  providedIn: 'root'
})
export class SchedulesService {
  schedules: Schedules;
  jobStatusDictionary: any = {};

  constructor(private coreService: CoreService,
    private authService: AuthService,
    private httpClient: HttpClient) { }

  getSchedulesService(refresh = false, params = new HttpParams()) {
    let headers = new HttpHeaders();
    if (refresh) {
      headers = headers.append('Refresh', 'true');
    }

    const options = { params: params, headers: headers };

    const getSchedulesRequestUrl = this.coreService.getServerAddress() + 'scheduling/schedules';
    return this.httpClient.get<Schedules>(getSchedulesRequestUrl, options)
      .pipe(
        tap(data => {
          this.schedules = data;
          console.log(data);
        })
      );
  }

  getJobStatus() {
    this.jobStatusDictionary['Queue'] = '0';
    this.jobStatusDictionary['Running'] = '1';
    this.jobStatusDictionary['PendingRetry'] = '2';
    this.jobStatusDictionary['PartialComplete'] = '3';
    this.jobStatusDictionary['Complete'] = '4';
    this.jobStatusDictionary['Failed'] = '5';
    this.jobStatusDictionary['Error'] = '6';
    this.jobStatusDictionary['Expired'] = '7';
    this.jobStatusDictionary['SystemCancelled'] = '8';

    return this.jobStatusDictionary;
  }
}
