import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { HeaderComponent } from './header/header.component';
import { RouterModule } from '@angular/router';
import { RequestCache } from './interceptors/request-cache.service';
import { HTTP_INTERCEPTORS } from '@angular/common/http';
import { AuthInterceptor } from './interceptors/auth.interceptor';
import { CachingInterceptor } from './interceptors/caching.interceptor';
import { PagerService } from './pager/pager.service';
import { LoadingIndicatorInterceptor } from './interceptors/loading-indicator.interceptor';
import { LoadingConnectInterceptor } from './interceptors/loading-connect.interceptor';
import { LoadingStagesInterceptor } from './interceptors/loading-stages.interceptor';
import { FormsModule, ReactiveFormsModule} from '@angular/forms';
import { NgbModule, NgbTimeAdapter, NgbDateAdapter, NgbDateParserFormatter } from '@ng-bootstrap/ng-bootstrap';
import { FontAwesomeModule } from '@fortawesome/angular-fontawesome';
import { library as fontLibrary } from '@fortawesome/fontawesome-svg-core';
import { faCalendar,  faClock, faListAlt, faCaretSquareDown, faEdit } from '@fortawesome/free-regular-svg-icons';
import { DatetimePickerComponent } from './component/datetimepicker/datetimepicker.component';
import { NgbTimeStringAdapter } from './component/datetimepicker/ngbtimestring-adapter';
import { CustomAdapter, CustomDateParserFormatter } from './component/datetimepicker/ngbdatestring-adapter';
import { TableSelectorComponent } from './component/table-selector/table-selector.component';
import { NavTreeComponent } from './component/nav-tree/nav-tree.component';
import { TimepickerComponent } from './component/timepicker/timepicker.component';
import { TreeTableComponent } from './component/tree-table/tree-table.component';
import { TreeHeadComponent } from './component/tree-table/tree-head/tree-head.component';
import { TreeCellComponent } from './component/tree-table/tree-cell/tree-cell.component';
import { TreeCellViewComponent } from './component/tree-table/tree-cell/components/tree-cell-view/tree-cell-view.component';
import { CustomCellViewComponent } from './component/tree-table/tree-cell/components/tree-cell-view/custom/custom-tree-cell.component';
import { TreeCellActionsComponent } from './component/tree-table/tree-cell/components/tree-cell-actions/tree-cell-actions.component';
import { TreeBodyComponent } from './component/tree-table/tree-body/tree-body.component';
import { FilterRowComponent } from './component/tree-table/tree-body/components/filter-row/filter-row.component';
import { SubgridComponent } from './component/tree-table/subgrid/subgrid.component';
import { SubgridHeadComponent } from './component/tree-table/subgrid/components/subgrid-head/subgrid-head.component';
import { SubgridBodyComponent } from './component/tree-table/subgrid/components/subgrid-body/subgrid-body.component';
import { ProgressbarComponent } from './component/progressbar/progressbar.component';

fontLibrary.add(
  faCalendar,
  faClock,
  faListAlt,
  faCaretSquareDown,  
  faEdit
  );

@NgModule({
  declarations: [
    HeaderComponent,
    DatetimePickerComponent,
    TableSelectorComponent,
    NavTreeComponent,
    TimepickerComponent,
    TreeTableComponent,
    TreeHeadComponent,
    TreeCellComponent,
    TreeCellViewComponent,
    CustomCellViewComponent,
    TreeCellActionsComponent,
    TreeBodyComponent,
    FilterRowComponent,
    SubgridComponent,
    SubgridHeadComponent,
    SubgridBodyComponent,
    ProgressbarComponent
  ],
  imports: [
    CommonModule,
    RouterModule,
    FormsModule,
    ReactiveFormsModule,
    NgbModule,
    FontAwesomeModule
  ],
  exports: [
    HeaderComponent,
    DatetimePickerComponent,
    TableSelectorComponent,
    NavTreeComponent,
    TimepickerComponent,
    TreeTableComponent,
    TreeHeadComponent,
    TreeCellComponent,
    TreeCellViewComponent,
    CustomCellViewComponent,
    TreeCellActionsComponent,
    TreeBodyComponent,
    SubgridComponent,
    ProgressbarComponent
  ],
  providers: [
    RequestCache,
    PagerService,
    {
      provide: HTTP_INTERCEPTORS,
      useClass: AuthInterceptor,
      multi: true
    },
    {
      provide: HTTP_INTERCEPTORS,
      useClass: CachingInterceptor,
      multi: true
    },
    {
      provide: HTTP_INTERCEPTORS,
      useClass: LoadingIndicatorInterceptor,
      multi: true
    },
    {
      provide: HTTP_INTERCEPTORS,
      useClass: LoadingConnectInterceptor,
      multi: true
    },
    {
      provide: HTTP_INTERCEPTORS,
      useClass: LoadingStagesInterceptor,
      multi: true
    },
    {
      provide: NgbTimeAdapter, 
      useClass: NgbTimeStringAdapter
    },
    {
      provide: NgbDateAdapter, 
      useClass: CustomAdapter
    },
    {
      provide: NgbDateParserFormatter, 
      useClass: CustomDateParserFormatter
    }
  ]
})
export class CoreModule { }
